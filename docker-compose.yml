version: '3.8'

services:
  # --------------
  # - Flask - Dev
  # --------------
  flask_dev:
    container_name: flask_dev
    build: ./services/web
    command: python manage.py run -h 0.0.0.0
    restart: on-failure
    volumes:
      - ./services/web/:/usr/src/app/
    ports:
      - ${DEV_FLASK_PORT}:5000
    env_file:
      - ./.env
    depends_on:
      - db_dev
    networks:
      - net
  
  # --------------
  # - Flask - Prod
  # --------------
  flask_prod:
    container_name: flask_prod
    build:
      context: ./services/web
      dockerfile: Dockerfile.prod
    command: gunicorn -b 0.0.0.0:5000 manage:app
    restart: on-failure
    volumes:
      - static_volume:/home/app/web/src/static
      - media_volume:/home/app/web/src/media
    expose:
      - ${PROD_FLASK_PORT}
    env_file:
      - ./.env
    depends_on:
      - db_prod
    networks:
      - net

  # --------------
  # - DB (Dev)
  # --------------
  db_dev:
    container_name: db_dev
    image: mysql:8.0.32-debian
    platform: linux/amd64
    restart: on-failure
    expose:
      - ${DEV_DB_PORT}
    volumes:
      - mysql_data-dev:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: ${DB_NAME}
      TZ: ${DB_TIMEZONE}
    networks:
      - net
  
  # --------------
  # - DB (Prod)
  # --------------
  db_prod:
    container_name: db_prod
    image: mysql:8.0.32-debian
    platform: linux/amd64
    restart: on-failure
    expose:
      - ${PROD_DB_PORT}
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      TZ: ${DB_TIMEZONE}
    networks:
      - net

  # --------------
  # - Nginx
  # --------------
  nginx:
    container_name: nginx
    build: ./services/nginx
    restart: on-failure
    volumes:
      - static_volume:/home/app/web/project/static
      - media_volume:/home/app/web/project/media
    ports:
      - ${PROD_NGINX_PORT}:80
    depends_on:
      - flask_prod
    networks:
      - net

  # --------------
  # - PhpMyAdmin (Dev)
  # --------------
  phpmyadmin_dev:
    container_name: phpmyadmin_dev
    image: phpmyadmin/phpmyadmin
    restart: on-failure
    ports:
      - ${DEV_PHPMYADMIN_PORT}:80
    networks:
      - net
    depends_on:
      - db_dev
    environment:
      PMA_HOST: db
      PMA_PORT: ${DEV_DB_PORT}
      PMA_USER: root
      PMA_PASSWORD: ${DB_ROOT_PASSWORD}
      PMA_ARBITRARY: 1

  # --------------
  # - PhpMyAdmin (Prod)
  # --------------
  phpmyadmin_prod:
    container_name: phpmyadmin_prod
    image: phpmyadmin/phpmyadmin
    restart: on-failure
    ports:
      - ${PROD_PHPMYADMIN_PORT}:80
    networks:
      - net
    depends_on:
      - db_prod
    environment:
      PMA_HOST: db
      PMA_PORT: ${DEV_DB_PORT}
      PMA_USER: root
      PMA_PASSWORD: ${DB_ROOT_PASSWORD}
      PMA_ARBITRARY: 1

volumes:
  mysql_data:
  mysql_data-dev:
  static_volume:
  media_volume:
networks:
  net: